num n = 1;
vec u = [1 2];
vec v = {1 2};
mat m = {[1 2] [3 4]};
n = n + 1;
n = n - 1;
u = u * 1;
v = v / 1;
m = m ^ 1;
num dp = u * v;
mat xp = v * u;
mat msq = m * m;
fn scalar_and_vector(num x, vec y, mat z) vec{
    return x * y * z;
}